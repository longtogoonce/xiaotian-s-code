#include <stdio.h>
<<<<<<< HEAD
#include <math.h>
int wei(int k);
int huiwen(int x);
int main()
{
	int x,y,i,sign,j;
	scanf("%d %d",&x,&y);
	if(y>100000000)
		y=100000000;
	if(x%2==0)
		x++;
	for(i=x;i<=y;i+=2)
	{
		if(wei(i))	
		{
			if(huiwen(i))
			{
				sign=1;
				for(j=2;j<=sqrt(i);j++)
				{
					if(i%j==0)
					sign=0;
				}
				if(sign==1)
					printf("%d\n",i);
			}
			
		else
			continue;	
		}
		else
			continue;
	}
	return 0;
}
int huiwen(int x)
{
	int y=x;
	int total=0;

	while(y!=0)
	{
		total=total*10+y%10;
		y/=10;
	}
	if(total==x)
		return 1;
	else
		return 0;
	
}
int wei(int k)
{
	if(k>=10 && k<100 && k!=11 || k>=1000 && k<10000)return 0;
        if(k>=100000 && k<1000000 || k>=10000000 && k<100000000)return 0;
        return 1;
}
=======
struct location{
    int x;
    int y;
};
int main()
{
    char map[12][12];
    struct location F,C;
    int i,j,total=0,w=0,q=0;
    int step[4][2]={
        {-1,0},{0,1},{1,0},{0,-1}
    };
    for(i=1;i<=10;i++)
    {
        scanf("%s",&map[i][1]);   
    }
    for(i=0;i<=11;i++) 
    {   
        map[0][i]='*',map[11][i]='*';
        map[i][0]='*',map[i][11]='*';
    }
    for( i=1;i<=10;i++) 
    {
        for(j=1;j<=10;j++)
        {
            if(map[i][j]=='C') C.x=i,C.y=j;
            if(map[i][j]=='F') F.x=i,F.y=j;
        }
    }
    while(1)
    {
        if(F.x==C.x&&F.y==C.y)
        {
            printf("%d",total);
            break;
        }
        if(total>300000)
        {
			printf("0");
            break;
        }
            if(map[F.x+step[w][0]][F.y+step[w][1]]!='*')
            {
                F.x+=step[w][0];
                F.y+=step[w][1];
            }    
            else
                w=(++w)%4;
            if(map[C.x+step[q][0]][C.y+step[q][1]]!='*')
            {
                C.x+=step[q][0];
                C.y+=step[q][1];
            }
            else
                q=(++q)%4;
        total++;
    }
    return 0;
}
>>>>>>> 6072ab46419468004c9d65e0148319a935a2a228
